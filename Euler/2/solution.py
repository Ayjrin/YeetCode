# Euler Project Problem 2: Even Fibonacci Numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.
import sys
sys.set_int_max_str_digits(500000)

def fibby():
    lesser = 1
    greater = 2

    fib = []
    temp=0

    while (temp <= 4_000_000):
        temp = lesser
        lesser = greater
        greater = temp + lesser
        fib.append(temp)

    return fib

def even(fib):
    fib_even = 0
    for i in range(len(fib)):
        if fib[i] % 2 == 0:
            fib_even += fib[i]

    with open("solution.txt", "w") as f:
        f.write(str(fib_even))

even(fibby())
